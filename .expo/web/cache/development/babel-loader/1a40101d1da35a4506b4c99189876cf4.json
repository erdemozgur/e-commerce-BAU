{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/erdemozgur/Documents/GitHub/e-commerce-BAU/src/views/UpdateCategory.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { createStackNavigator } from 'react-navigation-stack';\nexport default function UpdateCategory(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(navigation.getParam('name', 'Not Found!')),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(navigation.getParam('id', 'Not Found!')),\n      _useState4 = _slicedToArray(_useState3, 2),\n      id = _useState4[0],\n      setID = _useState4[1];\n\n  var _useState5 = useState(navigation.getParam('description', 'Not Found!')),\n      _useState6 = _slicedToArray(_useState5, 2),\n      description = _useState6[0],\n      setDescription = _useState6[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var response, category;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch(\"https://northwind.vercel.app/api/categories/\" + id));\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(response.json);\n\n            case 5:\n              category = _context.sent;\n              setName(name);\n              setDescription(description);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  });\n\n  var submit = function submit() {\n    return _regeneratorRuntime.async(function submit$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(fetch(\"https://northwind.vercel.app/api/categories/\" + id, {\n              method: 'PUT',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                name: name,\n                description: description\n              })\n            }));\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.text2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, \" Update Category \"), React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, \" Name: \"), React.createElement(TextInput, {\n    style: styles.input,\n    onChangeText: function onChangeText(val) {\n      return setName(val);\n    },\n    placeholder: \"Name\",\n    value: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }), React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, \" Description: \"), React.createElement(TextInput, {\n    style: styles.input,\n    onChangeText: function onChangeText(val) {\n      return setDescription(val);\n    },\n    placeholder: \"Description\",\n    value: description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }), React.createElement(Button, {\n    title: \"Update\",\n    onPress: function onPress() {\n      return submit();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }));\n}\n;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center'\n  },\n  text: {\n    fontFamily: 'Helvetica',\n    fontSize: 20,\n    color: '#191970',\n    textAlign: 'center'\n  },\n  text2: {\n    fontFamily: 'Helvetica',\n    fontSize: 40,\n    color: '#663399',\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: '#777',\n    margin: 10,\n    padding: 8,\n    width: 200,\n    borderRadius: 16,\n    textAlign: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/erdemozgur/Documents/GitHub/e-commerce-BAU/src/views/UpdateCategory.js"],"names":["React","useEffect","useState","createStackNavigator","UpdateCategory","navigation","getParam","name","setName","id","setID","description","setDescription","fetch","response","json","category","submit","method","headers","body","JSON","stringify","styles","container","text2","text","input","val","StyleSheet","create","flex","backgroundColor","alignItems","fontFamily","fontSize","color","textAlign","fontWeight","borderWidth","borderColor","margin","padding","width","borderRadius"],"mappings":"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","sourcesContent":["    import React, { useEffect, useState } from \"react\";\n    import { View,Text,StyleSheet, TextInput, Button} from 'react-native';\n    import { createStackNavigator } from 'react-navigation-stack';\n\n    export default function UpdateCategory({navigation}){\n\n      const [name, setName] = useState(navigation.getParam('name', 'Not Found!'))\n      const [id, setID] = useState(navigation.getParam('id', 'Not Found!'))\n      const [description, setDescription] = useState(navigation.getParam('description', 'Not Found!'))\n\n      useEffect(() => {\n        (\n          async() => {\n            const response = await fetch(\"https://northwind.vercel.app/api/categories/\"+id);\n            const category = await response.json;\n            setName(name);\n            setDescription(description);\n\n          }\n        )();\n      });\n\n\n      const submit = async () => {\n        await fetch(\"https://northwind.vercel.app/api/categories/\"+id,{\n          method: 'PUT',\n          headers: {'Content-Type': 'application/json'},\n          body: JSON.stringify({\n            name,\n            description\n          })\n        });\n\n      }\n\n      return(\n          <View style={styles.container}>\n          <Text style={styles.text2}> Update Category </Text> \n          <Text style={styles.text}> Name: </Text>    \n          <TextInput \n            style={styles.input}\n            onChangeText = {(val) => setName(val)}\n            placeholder = 'Name'\n            value = {name} />\n\n          <Text style={styles.text}> Description: </Text>\n            <TextInput \n              style={styles.input}\n              onChangeText = {(val) => setDescription(val)}\n              placeholder = 'Description'\n              value = {description} />\n\n          <Button\n            title= \"Update\"\n            onPress={()=>submit()}\n            />\n        </View> \n\n      );\n    };\n\n    const styles = StyleSheet.create({\n      container: {\n        flex: 1,\n        backgroundColor: '#fff',\n        alignItems: 'center',\n      },\n        text: {\n        fontFamily: 'Helvetica',\n        fontSize: 20,\n        color: '#191970',\n        textAlign: 'center'\n        },\n        text2: {\n        fontFamily: 'Helvetica',\n        fontSize: 40,\n        color: '#663399',\n        fontWeight: 'bold',\n        textAlign: 'center'\n        },\n        input : {\n          borderWidth: 1,\n          borderColor: '#777',\n          margin: 10,\n          padding: 8,\n          width: 200,\n          borderRadius: 16,\n          textAlign: 'center',\n        }\n\n   });\n\n "]},"metadata":{},"sourceType":"module"}