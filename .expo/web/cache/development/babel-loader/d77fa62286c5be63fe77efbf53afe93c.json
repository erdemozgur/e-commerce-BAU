{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/erdemozgur/Documents/GitHub/e-commerce-BAU/src/views/Orders.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\n\nvar OrdersScreen = function (_React$Component) {\n  _inherits(OrdersScreen, _React$Component);\n\n  var _super = _createSuper(OrdersScreen);\n\n  function OrdersScreen(props) {\n    var _this;\n\n    _classCallCheck(this, OrdersScreen);\n\n    _this = _super.call(this, props);\n\n    _this.renderItemComponent = function (data) {\n      return React.createElement(TouchableHighlight, {\n        style: styles.container,\n        newDate: _this.getParsedDate(data.item.orderDate),\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: {\n          backgroundColor: 'white'\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 12\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 22,\n          fontWeight: '700',\n          opacity: .8\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 12\n        }\n      }, \"Order Date:  \", newDate), React.createElement(Text, {\n        style: {\n          fontSize: 18,\n          opacity: .7\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }\n      }, \"Customer ID: \", data.item.customerId), React.createElement(Text, {\n        style: {\n          fontSize: 18,\n          fontWeight: '700'\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }\n      }, \"Ship Address: \"), React.createElement(Text, {\n        style: {\n          fontSize: 14,\n          opacity: .6,\n          color: 'blue'\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }\n      }, data.item.shipAddress.street), React.createElement(Text, {\n        style: {\n          fontSize: 14,\n          opacity: .6,\n          color: 'blue'\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }\n      }, data.item.shipAddress.region), React.createElement(Text, {\n        style: {\n          fontSize: 14,\n          opacity: .6,\n          color: 'blue'\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }\n      }, data.item.shipAddress.city)));\n    };\n\n    _this.ItemSeparator = function () {\n      return React.createElement(View, {\n        style: {\n          height: 2,\n          backgroundColor: \"rgba(0,0,0,0)\",\n          marginLeft: 10,\n          marginRight: 10\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 27\n        }\n      });\n    };\n\n    _this.handleRefresh = function () {\n      _this.setState({\n        refreshing: false\n      }, function () {\n        _this.fetchData();\n      });\n    };\n\n    _this.state = {\n      data: [],\n      refreshing: true\n    };\n    return _this;\n  }\n\n  _createClass(OrdersScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchData();\n    }\n  }, {\n    key: \"fetchData\",\n    value: function fetchData() {\n      var _this2 = this;\n\n      this.setState({\n        refreshing: true\n      });\n      fetch('https://northwind.vercel.app/api/orders').then(function (res) {\n        return res.json();\n      }).then(function (resJson) {\n        _this2.setState({\n          data: resJson\n        });\n\n        _this2.setState({\n          refreshing: false\n        });\n      }).catch(function (e) {\n        return console.log(e);\n      });\n    }\n  }, {\n    key: \"getParsedDate\",\n    value: function getParsedDate(date) {\n      date = String(date).split(' ');\n      var days = String(date[0]).split('-');\n      return [parseInt(days[0]), parseInt(days[1]) - 1, parseInt(days[2])];\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(SafeAreaView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }\n      }, React.createElement(FlatList, {\n        data: this.state.data.sort(function (a, b) {\n          return b.orderDate > a.orderDate ? 1 : -1;\n        }),\n        renderItem: function renderItem(item) {\n          return _this3.renderItemComponent(item);\n        },\n        keyExtractor: function keyExtractor(item) {\n          return item.id.toString();\n        },\n        ItemSeparatorComponent: this.ItemSeparator,\n        refreshing: this.state.refreshing,\n        onRefresh: this.handleRefresh,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }\n      }));\n    }\n  }]);\n\n  return OrdersScreen;\n}(React.Component);\n\nexport { OrdersScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    height: 150,\n    width: 500,\n    margin: 10,\n    borderRadius: 12,\n    flexDirection: 'row',\n    padding: 10,\n    backgroundColor: '#FFF'\n  },\n  image: {\n    height: '10%',\n    borderRadius: 4\n  }\n});","map":{"version":3,"sources":["/Users/erdemozgur/Documents/GitHub/e-commerce-BAU/src/views/Orders.js"],"names":["React","OrdersScreen","props","renderItemComponent","data","styles","container","getParsedDate","item","orderDate","backgroundColor","fontSize","fontWeight","opacity","newDate","customerId","color","shipAddress","street","region","city","ItemSeparator","height","marginLeft","marginRight","handleRefresh","setState","refreshing","fetchData","state","fetch","then","res","json","resJson","catch","e","console","log","date","String","split","days","parseInt","sort","a","b","id","toString","Component","StyleSheet","create","width","margin","borderRadius","flexDirection","padding","image"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n    StyleSheet,\n    SafeAreaView,\n    FlatList,\n    View,\n    Text,\n    TouchableHighlight\n} from \"react-native\";\n\nexport default class OrdersScreen extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n            refreshing: true,\n        }\n    }\n\n    componentDidMount() {\n        this.fetchData();\n    }\n\n    fetchData() {\n        this.setState({ refreshing: true });\n        fetch('https://northwind.vercel.app/api/orders')\n            .then(res => res.json())\n            .then(resJson => {\n                this.setState({ data: resJson });\n                this.setState({ refreshing: false });\n            }).catch(e => console.log(e));\n    }\n\n\n    getParsedDate(date) {\n      date = String(date).split(' ');\n      var days = String(date[0]).split('-');\n      return [parseInt(days[0]), parseInt(days[1])-1, parseInt(days[2])];\n    }\n\n    renderItemComponent = (data) =>\n        <TouchableHighlight style={styles.container}  newDate = {this.getParsedDate(data.item.orderDate)}>\n           <View style={{ backgroundColor: 'white' }}>\n           <Text  style={{ fontSize: 22, fontWeight: '700', opacity: .8 }} >Order Date:  {newDate}</Text>\n                <Text style={{ fontSize: 18, opacity: .7 }}>Customer ID: {data.item.customerId}</Text>\n                <Text style={{ fontSize: 18, fontWeight: '700' }}>Ship Address: </Text>\n                <Text style={{ fontSize: 14, opacity: .6 , color: 'blue'}}>{data.item.shipAddress.street}</Text> \n                <Text style={{ fontSize: 14, opacity: .6 , color: 'blue'}}>{data.item.shipAddress.region}</Text>                            \n                <Text style={{ fontSize: 14, opacity: .6 , color: 'blue'}}>{data.item.shipAddress.city}</Text>\n            </View>\n        </TouchableHighlight>\n \n    ItemSeparator = () => <View style={{\n        height: 2,\n        backgroundColor: \"rgba(0,0,0,0)\",\n        marginLeft: 10,\n        marginRight: 10,\n    }}\n    />\n\n    handleRefresh = () => {\n        this.setState({ refreshing: false }, () => { this.fetchData() });\n    }\n\n    render() {\n      return (\n        <SafeAreaView>\n          <FlatList\n            data={this.state.data.sort((a, b) => b.orderDate > a.orderDate ? 1: -1)}\n            renderItem={item => this.renderItemComponent(item)}\n            keyExtractor={item => item.id.toString()}\n            ItemSeparatorComponent={this.ItemSeparator}\n            refreshing={this.state.refreshing}\n            onRefresh={this.handleRefresh}\n          />\n        </SafeAreaView>)\n    }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    height: 150,\n    width: 500,\n    margin: 10,\n    borderRadius: 12,\n    flexDirection: 'row',\n    padding: 10,\n    backgroundColor: '#FFF',\n\n  },\n  image: {\n    height: '10%',\n    borderRadius: 4,\n  },\n});"]},"metadata":{},"sourceType":"module"}