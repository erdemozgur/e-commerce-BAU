{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/erdemozgur/Documents/GitHub/e-commerce-BAU/src/views/Orders.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\n\nvar OrdersScreen = function (_React$Component) {\n  _inherits(OrdersScreen, _React$Component);\n\n  var _super = _createSuper(OrdersScreen);\n\n  function OrdersScreen(props) {\n    var _this;\n\n    _classCallCheck(this, OrdersScreen);\n\n    _this = _super.call(this, props);\n\n    _this.renderItemComponent = function (data) {\n      return React.createElement(TouchableHighlight, {\n        style: styles.container,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: {\n          backgroundColor: 'white'\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 12\n        }\n      }, React.createElement(Text, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }\n      }, data.item.customerId)));\n    };\n\n    _this.ItemSeparator = function () {\n      return React.createElement(View, {\n        style: {\n          height: 2,\n          backgroundColor: \"rgba(0,0,0,0.5)\",\n          marginLeft: 10,\n          marginRight: 10\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 27\n        }\n      });\n    };\n\n    _this.handleRefresh = function () {\n      _this.setState({\n        refreshing: false\n      }, function () {\n        _this.fetchData();\n      });\n    };\n\n    _this.state = {\n      data: [],\n      refreshing: true\n    };\n    return _this;\n  }\n\n  _createClass(OrdersScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchData();\n    }\n  }, {\n    key: \"fetchData\",\n    value: function fetchData() {\n      var _this2 = this;\n\n      this.setState({\n        refreshing: true\n      });\n      fetch('https://northwind.vercel.app/api/orders').then(function (res) {\n        return res.json();\n      }).then(function (resJson) {\n        _this2.setState({\n          data: resJson\n        });\n\n        _this2.setState({\n          refreshing: false\n        });\n      }).catch(function (e) {\n        return console.log(e);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(SafeAreaView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }\n      }, React.createElement(FlatList, {\n        data: this.state.data,\n        renderItem: function renderItem(item) {\n          return _this3.renderItemComponent(item);\n        },\n        keyExtractor: function keyExtractor(item) {\n          return item.id.toString();\n        },\n        ItemSeparatorComponent: this.ItemSeparator,\n        refreshing: this.state.refreshing,\n        onRefresh: this.handleRefresh,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }\n      }));\n    }\n  }]);\n\n  return OrdersScreen;\n}(React.Component);\n\nexport { OrdersScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    height: 300,\n    margin: 10,\n    backgroundColor: '#FFF',\n    borderRadius: 6\n  },\n  image: {\n    height: '10%',\n    borderRadius: 4\n  }\n});","map":{"version":3,"sources":["/Users/erdemozgur/Documents/GitHub/e-commerce-BAU/src/views/Orders.js"],"names":["React","OrdersScreen","props","renderItemComponent","data","styles","container","backgroundColor","item","customerId","ItemSeparator","height","marginLeft","marginRight","handleRefresh","setState","refreshing","fetchData","state","fetch","then","res","json","resJson","catch","e","console","log","id","toString","Component","StyleSheet","create","margin","borderRadius","image"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n    StyleSheet,\n    SafeAreaView,\n    FlatList,\n    View,\n    Text,\n    TouchableHighlight\n} from \"react-native\";\n\nexport default class OrdersScreen extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n            refreshing: true,\n        }\n    }\n\n    componentDidMount() {\n        this.fetchData();\n    }\n\n    fetchData() {\n        this.setState({ refreshing: true });\n        fetch('https://northwind.vercel.app/api/orders')\n            .then(res => res.json())\n            .then(resJson => {\n                this.setState({ data: resJson });\n                this.setState({ refreshing: false });\n            }).catch(e => console.log(e));\n    }\n\n    renderItemComponent = (data) =>\n        <TouchableHighlight style={styles.container}>\n           <View style={{ backgroundColor: 'white' }}>\n                <Text>{data.item.customerId}</Text>\n            </View>\n        </TouchableHighlight>\n \n    ItemSeparator = () => <View style={{\n        height: 2,\n        backgroundColor: \"rgba(0,0,0,0.5)\",\n        marginLeft: 10,\n        marginRight: 10,\n    }}\n    />\n\n    handleRefresh = () => {\n        this.setState({ refreshing: false }, () => { this.fetchData() });\n    }\n\n    render() {\n      return (\n        <SafeAreaView>\n          <FlatList\n            data={this.state.data}\n            renderItem={item => this.renderItemComponent(item)}\n            keyExtractor={item => item.id.toString()}\n            ItemSeparatorComponent={this.ItemSeparator}\n            refreshing={this.state.refreshing}\n            onRefresh={this.handleRefresh}\n          />\n        </SafeAreaView>)\n    }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    height: 300,\n    margin: 10,\n    backgroundColor: '#FFF',\n    borderRadius: 6,\n  },\n  image: {\n    height: '10%',\n    borderRadius: 4,\n  },\n});"]},"metadata":{},"sourceType":"module"}